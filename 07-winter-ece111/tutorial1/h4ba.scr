/*  h4ba.scr :  dc_shell script for hierarchical four-bit adder */


/* full.adder.v is checked for errors using the analyze command. */
/* If no errors, the verilog is translated to an intermediate format. */
/* The messages generated by the analyze command are redirected to a file, fa.analyze, for examination. */ 
analyze -f verilog full.adder.v > fa.analyze


/* The full_adder module is translated into a design using the Synopsys generic library with the elaborate command. */
elaborate full_adder > fa.elaborate


/* The analyze and elaborate commands are used with the h4ba module in the file h4ba.v  */  
analyze -f verilog h4ba.v > h4ba.analyze
elaborate h4ba > h4ba.elaborate


/*  set the current_design variable to module h4ba  */
current_design h4ba


/*  uniquify removes multiple-instantiated hierarchy in the design by creating a unique design for each cell instance. */ 
/* this command is needed for this design due to the multiple instantiations of the full adder */
uniquify -force 


/* Obtain a report to see if there are any combinational loops. */
/* If there is a combinational loop the report will state that a timing loop is detected. */
/* If there is no combinational loop the report will state that no loops were detected. */
report_timing -loops > h4ba.loop


/* Check for unwanted latches - The resultant file, h4ba.latch, should be an empty file, signifying no latches.  */
all_registers -level_sensitive > h4ba.latch


/*  set_max_delay is an optional command to set a maximum path delay for a combinational design.  */ 
set_max_delay  2  -from {"addend_one[3]", "addend_one[2]", "addend_one[1]", "addend_one[0]", "addend_two[3]", "addend_two[2]", "addend_two[1]", "addend_two[0]",  "carry_in"}  -to {"sum[3]", "sum[2]", "sum[1]", "sum[0]", "carry_out"}
 
 

/* The design is mapped and optimized to the TSMC technology library using the compile command. */
/* The compile log messages are redirected to the file, h4ba.compile */
compile -map_effort medium > h4ba.compile


/* The area report is written to file.*/
/* Divide the total area by 5.1, the area of a two-input nand gate, to obtain area in number of gates. */
report_area > h4ba.area

/* The timing report is written to file. */
/* Reports the longest path delay in the design in nanoseconds. */
report_timing > h4ba.timing


/* Make a postscript schematic file, h4ba.ps. (There will be font and symbol warnings, which is ok.) */
create_schematic
plot -output h4ba + .ps 


/* Check design for warnings and write output to file h4ba_warnings, which should be empty signifying no warnings. */   
check_design > h4ba.warnings


/* Write the design to the file h4ba.db in Synopsys internal database format. */ 
write h4ba
